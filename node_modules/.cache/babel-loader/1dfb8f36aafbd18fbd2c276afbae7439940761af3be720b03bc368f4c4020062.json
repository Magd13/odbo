{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Magdiel\\\\OneDrive\\\\Documents\\\\Proyectos\\\\React\\\\odbo\\\\src\\\\componentes\\\\formulario-cuenta.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\nimport FormEmail from \"./register/formEmail\";\nimport FormTelefono from \"./register/formTelefono\";\nimport FormContraseña from \"./register/formContraseña\";\nimport FormNombres from \"./register/formNombres\";\nimport FormTelefonoVal from \"./register/formValidacionTelefono\";\nimport FormEmailVal from \"./register/formValidacionEmail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Formcuenta() {\n  _s();\n  const location = useLocation();\n  const [editMode, setEditMode] = useState(false);\n  const [userData, setUserData] = useState(null);\n  const navigate = useNavigate();\n  const [telefonoRegistrado, setTelefonoRegistrado] = useState('');\n  // Verificar si se ha pasado el estado editMode como parte de la ubicación\n  useEffect(() => {\n    if (location.state && location.state.editMode && location.state && location.state.userData) {\n      setUserData(location.state.userData);\n      setEditMode(true);\n    }\n  }, [location.state]);\n\n  // Verificar si userData está definido antes de asignar sus valores\n  useEffect(() => {\n    if (userData) {\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        email: userData.usuario.correo || '',\n        nombres: userData.usuario.nombres || '',\n        telefono: userData.usuario.telefono || '',\n        apellidos: userData.usuario.apellidos || '',\n        cedula: userData.usuario.id_cedula || '',\n        usuario: userData.usuario.usuarios || ''\n      }));\n      if (editMode) {\n        setTelefonoRegistrado(userData.usuario.telefono || \"\");\n      }\n    }\n  }, [userData, editMode]);\n  const [formData, setFormData] = useState({\n    email: '',\n    telefono: '',\n    contraseña: '',\n    nombres: '',\n    apellidos: '',\n    cedula: '',\n    usuario: '',\n    confirmPassword: '',\n    aceptoTerminos: false,\n    aceptoContacto: false\n  });\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n  const onClose = () => {\n    setShowEmailForm(false);\n    setShowContraseñaForm(false);\n    setShowEmailForm(false);\n    setShowNombresForm(false);\n    setShowTelefonoForm(false);\n  };\n  const handleFormChange = (fieldName, value) => {\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [fieldName]: value\n    }));\n  };\n  const [emailError, setEmailError] = useState('');\n  const [cedulaError, setCedulaError] = useState('');\n  const [usuarioError, setUsuarioError] = useState('');\n  const [telefonoError, setTelefonoError] = useState('');\n  const [contraseñaError, setContraseñaError] = useState('');\n  const [emailValidado, setEmailValidado] = useState(false);\n  const [nombreValidado, setNombreValidado] = useState(false);\n  const [telefonoValidado, setTelefonoValidado] = useState(false);\n  const [passwordsMatch, setPasswordsMatch] = useState(true);\n  const [buttonEnabled, setButtonEnabled] = useState({\n    nombre: false,\n    telefono: false,\n    contraseña: false\n  });\n\n  // Si estamos en modo de edición, habilitar todos los botones\n  useEffect(() => {\n    if (editMode) {\n      setButtonEnabled({\n        nombre: true,\n        telefono: true,\n        contraseña: true\n      });\n    }\n  }, [editMode]);\n\n  // FUNCION PARA VALIDAR EL EMAIL\n  const validateEmail = email => {\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\n    return emailRegex.test(email);\n  };\n  const handleSubmitEmail = event => {\n    event.preventDefault();\n    // Validar que el email sea válido\n    if (!validateEmail(formData.email)) {\n      setEmailError('El correo electrónico ingresado no es válido');\n      return;\n    } else {\n      setEmailError('');\n    }\n    // Validar que se hayan aceptado los términos\n    if (!formData.aceptoTerminos) {\n      setEmailError('Debes aceptar los términos y condiciones');\n      return;\n    } else {\n      setEmailError('');\n    }\n\n    //Verificar existencia de correo\n    fetch('http://localhost:5000/verificar_correo', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: formData.email\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.error) {\n        setEmailError(\"Este correo ya está en uso\");\n      } else {\n        fetch('http://localhost:5000/enviar_codigo_email', {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: formData.email\n          })\n        }).then(response => response.json()).then(data => {\n          if (data.success) {\n            handleShowValidacionEmailForm();\n            setEmailError(\"\");\n          } else {\n            setEmailError(\"Error al enviar el codigo de verificacion. Inténtalo de nuevo mas tarde.\");\n          }\n        }).catch(error => {\n          setEmailError(\"Error al enviar el codigo de verificacion:\", error);\n        });\n      }\n    }).catch(error => {\n      setEmailError('Error al verificar correo:', error);\n    });\n  };\n\n  //FUNVION DE VALIDACION DE CODIGO DE SEGURIDAD DEL CORREO\n  const handleEmailCodigoValidacion = event => {\n    event.preventDefault();\n    const codigo_verificacion = event.target['verification-code'].value;\n    fetch('http://localhost:5000/verificar_codigo_email', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        codigo_verificacion: codigo_verificacion,\n        email: formData.email\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        setShowValidacionEmailForm(false);\n        if (editMode) {\n          return;\n        }\n        setEmailValidado(true);\n        setButtonEnabled(prevState => ({\n          ...prevState,\n          nombre: true\n        }));\n      } else {\n        setEmailError(\"Error al verificar codigo de verificacion\", data.error);\n      }\n    }).catch(error => {\n      setEmailError(\"Error al verificar codigo de verificacion\", error);\n    });\n  };\n\n  //FIN DE VALIDACION DE EMAIL\n  //FUNCION PARA VALIDACION DE NOMBRES Y  APELLIDOS DE USUARIO\n  const handleSubmitNombres = event => {\n    event.preventDefault();\n    if (formData.nombres === \"\" || formData.apellidos === \"\" || formData.cedula === \"\" || formData.usuario === \"\") {\n      // Mostrar mensaje de error o tomar otra acción según sea necesario\n      setUsuarioError(\"Todos los campos son requeridos\");\n      return;\n    } else {\n      setUsuarioError(\"\");\n    }\n\n    // Validar que el número de cédula tenga 10 dígitos numéricos\n    if (!/^\\d{10}$/.test(formData.cedula)) {\n      // Mostrar mensaje de error o tomar otra acción según sea necesario\n      setCedulaError(\"El número de cédula debe tener 10 dígitos\");\n      return;\n    } else {\n      setCedulaError(\"\");\n    }\n\n    //Verificar la existencia del numero de cedula y usuario si no esta en modo de edicion\n    if (!editMode) {\n      fetch('http://localhost:5000/verificar_datos', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cedula: formData.cedula,\n          usuario: formData.usuario\n        })\n      }).then(response => response.json()).then(data => {\n        if (data.cedula_error) {\n          setCedulaError(data.cedula_error);\n        } else if (data.usuario_error) {\n          setUsuarioError(data.usuario_error);\n        } else {\n          // Si no hay errores, puedes proceder al siguiente paso\n          setShowNombresForm(false);\n          setNombreValidado(true);\n          setButtonEnabled(prevState => ({\n            ...prevState,\n            telefono: true\n          }));\n        }\n      }).catch(error => {\n        setUsuarioError(\"Ocurrió un error al verificar la cedula y el usuario\", error);\n      });\n    } else {\n      setShowNombresForm(false);\n    }\n  };\n\n  //FIN DE LA VALIDACION DE NOMBRES\n  //FUNCION PARA VALIDAR EL NUMERO DE TELEFONO\n  const handleSubmitTelefono = event => {\n    event.preventDefault();\n    // Validar que el número de teléfono tenga exactamente 9 dígitos numéricos\n    if (!/^\\d{9}$/.test(formData.telefono)) {\n      // Mostrar mensaje de error o tomar otra acción según sea necesario\n      setTelefonoError(\"El número de teléfono debe tener 9 dígitos numéricos\");\n      return;\n    } else {\n      setTelefonoError(null);\n    }\n    if (!formData.aceptoContacto) {\n      // Mostrar mensaje de error o tomar otra acción según sea necesario\n      setTelefonoError(\"Debes aceptar que te contacten por WhatsApp y/o SMS\");\n      return;\n    } else {\n      setTelefonoError(null);\n    }\n\n    // Verificar si está en modo de edición y el número de teléfono ingresado es el mismo que el número existente\n    if (editMode && formData.telefono === telefonoRegistrado) {\n      setTelefonoError(\"El número ingresado es el mismo. Si deseas modificarlo, ingresa un nuevo número\");\n      return;\n    }\n\n    // Verificar existencia de numero de telefono \n    fetch('http://localhost:5000/verificar_telefono', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        telefono: formData.telefono\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.error) {\n        setTelefonoError(\"Este numero de telefono ya esta en uso\");\n      } else {\n        // Si el número de teléfono no está en uso, enviar el código de verificación desde el servidor\n        fetch('http://localhost:5000/enviar_codigo_verificacion', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            telefono: formData.telefono\n          })\n        }).then(response => response.json()).then(data => {\n          if (data.success) {\n            // Si el código se envió correctamente, mostrar el formulario de validación\n            handleShowValidacionForm();\n            setTelefonoError(\"\"); // Limpiar el error de teléfono si lo hay\n          } else {\n            setTelefonoError(\"Error al enviar el código de verificación. Inténtalo de nuevo más tarde.\");\n          }\n        }).catch(error => {\n          setTelefonoError('Error al enviar el código de verificación:', error);\n        });\n      }\n    }).catch(error => {\n      setTelefonoError('Error al verificar numero de telefono', error);\n    });\n  };\n\n  //FUNVION DE VALIDACION DE CODIGO DE SEGURIDAD DEL TELEFONO\n  const handleSubmitCodigoVerificacion = event => {\n    event.preventDefault();\n    const codigoVerificacion = event.target['verification-code'].value; // Obtener el código de verificación del formulario\n\n    fetch('http://localhost:5000/verificar_codigo_verificacion', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        codigo_verificacion: codigoVerificacion,\n        telefono: formData.telefono\n      }) // Enviar el código de verificación al servidor\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        // Si la verificación es exitosa, actualizar el estado de la aplicación\n        setShowValidacionForm(false);\n        if (editMode) {\n          return;\n        }\n        setTelefonoValidado(true);\n        setButtonEnabled(prevState => ({\n          ...prevState,\n          contraseña: true\n        }));\n      } else {\n        // Si la verificación falla, mostrar un mensaje de error\n        setTelefonoError('Error al verificar código de verificación:', data.error);\n        // Aquí puedes mostrar un mensaje de error al usuario o tomar otra acción según necesites\n      }\n    }).catch(error => {\n      setTelefonoError('Error al verificar código de verificación:', error);\n      // Aquí puedes manejar errores de red u otros errores de comunicación con el servidor\n    });\n  };\n  //FIN DE LA VALIDACION DE TELEFONO\n  //FUNCION PARA VALIDACION DE CONTRASEÑA  \n\n  const handleSubmitContraseña = event => {\n    event.preventDefault();\n    const contraseñaRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\n    if (!contraseñaRegex.test(formData.contraseña)) {\n      setContraseñaError('La contraseña debe tener al menos 8 caracteres, incluyendo al menos una letra minúscula, una letra mayúscula y un número');\n      return;\n    }\n\n    // Validar que las contraseñas coincidan\n    if (formData.contraseña !== formData.confirmPassword) {\n      setContraseñaError('Las contraseñas no coinciden');\n      return;\n    } else {\n      setContraseñaError(\"\");\n    }\n    console.log(\"Formulario completo:\", isFormDataComplete()); // Registrar si el formulario está completo\n\n    console.log(\"Datos a enviar al servidor:\", formData);\n    if (isFormDataComplete()) {\n      // Enviar datos al servidor\n      fetch('http://localhost:5000/insertar', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      }).then(response => response.json()).then(data => {\n        console.log('Respuesta del servidor con exito:', data);\n        if (data.success) {\n          // Mostrar mensaje de éxito\n          alert('¡Tus datos han sido guardados exitosamente!');\n        } else {\n          console.error('Error al guardar los datos:', data.error);\n        }\n      }).catch(error => {\n        console.error('Error al enviar datos:', error);\n      });\n    } else {\n      console.log('Formulario incompleto. No se envían datos.');\n    }\n  };\n  const isFormDataComplete = () => {\n    // Lista de campos que deben estar completos\n    const requiredFields = ['email', 'telefono', 'contraseña', 'nombres', 'apellidos', 'cedula', 'usuario', 'confirmPassword'];\n\n    // Verificar si todos los campos obligatorios del formData están llenos\n    for (const key of requiredFields) {\n      if (!formData[key]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleSubmitEdit = event => {\n    event.preventDefault();\n    const actualPassword = event.target.elements['actualPassword'].value;\n    if (!actualPassword) {\n      setContraseñaError('Por favor, ingresa tu contraseña actual.');\n      return;\n    }\n    fetch('http://localhost:5000/verificar_contraseña', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        actualPassword,\n        cedula: formData.cedula\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        console.log(\"Contraseña actual correcta\");\n        handleUpdateContraseña(actualPassword); // La contraseña actual coincide, continuar con la actualización\n      } else {\n        setContraseñaError('La contraseña actual es incorrecta');\n      }\n    }).catch(error => {\n      console.error('Error al verificar la contraseña:', error);\n      setContraseñaError('Ocurrió un error al verificar la contraseña');\n    });\n  };\n  const handleUpdateContraseña = () => {\n    // Verificar si el usuario está ingresando una nueva contraseña\n    if (formData.contraseña && formData.confirmPassword) {\n      console.log(formData.contraseña + \"\" + formData.confirmPassword);\n      // Validar que las contraseñas coincidan\n      if (formData.contraseña !== formData.confirmPassword) {\n        setContraseñaError('Las contraseñas no coinciden');\n        return;\n      } else {\n        setContraseñaError('');\n      }\n\n      // Aquí realizarías la actualización de la contraseña en la base de datos\n      fetch('http://localhost:5000/actualizar_datos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          formData\n        })\n      }).then(response => response.json()).then(data => {\n        if (data.success) {\n          // Mostrar mensaje de éxito\n          alert('¡Datos actualizados correntamente!');\n          // Aquí podrías hacer algo adicional, como limpiar los campos de contraseña\n        } else {\n          console.error('Error al actualizar los datos', data.error);\n        }\n      }).catch(error => {\n        console.error('Error al enviar datos:', error);\n      });\n    } else {\n      // En este caso, el usuario solo ingresó la contraseña actual\n      formData.contraseña = actualPassword;\n      formData.confirmPassword = actualPassword;\n      console.log(formData);\n      if (isFormDataComplete()) {\n        console.log(isFormDataComplete);\n        fetch('http://localhost:5000/actualizar_datos', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            formData\n          })\n        }).then(response => response.json()).then(data => {\n          if (data.success) {\n            // Mostrar mensaje de éxito\n            alert('¡Datos actualizados exitosamente!');\n            // Aquí podrías hacer algo adicional, como limpiar los campos del formulario\n          } else {\n            console.error('Error al actualizar los datos:', data.error);\n          }\n        }).catch(error => {\n          console.error('Error al enviar datos:', error);\n        });\n      }\n    }\n    ;\n  };\n\n  //FIN DE LA VALIDACION DE CONTRASEÑA\n\n  const handleInputChange = (fieldName, value) => {\n    if (fieldName === \"contraseña\") {\n      // Si el campo que se está cambiando es la contraseña, también actualiza confirmPassword\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        contraseña: value,\n        // Actualizar confirmPassword si las contraseñas coinciden\n        confirmPassword: value === prevFormData.confirmPassword ? value : prevFormData.confirmPassword\n      }));\n      // Verificar si las contraseñas coinciden y actualizar el estado\n      setPasswordsMatch(value === formData.confirmPassword);\n    } else if (fieldName === \"confirmPassword\") {\n      // Si el campo que se está cambiando es la confirmación de la contraseña, actualiza solo ese campo\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        confirmPassword: value\n      }));\n      // Verificar si las contraseñas coinciden y actualizar el estado\n      setPasswordsMatch(formData.contraseña === value);\n    } else {\n      // Para otros campos, simplemente actualiza el estado del formulario\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        [fieldName]: value\n      }));\n    }\n  };\n  const handleCheckChange = () => {\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      aceptoTerminos: !prevFormData.aceptoTerminos\n    }));\n  };\n  const handleCheckboxChange = () => {\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      aceptoContacto: !prevFormData.aceptoContacto\n    }));\n  };\n  const [showEmailForm, setShowEmailForm] = useState(false);\n  const [showNombresForm, setShowNombresForm] = useState(false);\n  const [showTelefonoForm, setShowTelefonoForm] = useState(false);\n  const [showContraseñaForm, setShowContraseñaForm] = useState(false);\n  const [showValidacionForm, setShowValidacionForm] = useState(false);\n  const [showValidacionEmailForm, setShowValidacionEmailForm] = useState(false);\n  const handleShowValidacionEmailForm = () => {\n    setShowValidacionEmailForm(true);\n    setShowValidacionForm(false);\n    setShowContraseñaForm(false);\n    setShowNombresForm(false);\n    setShowTelefonoForm(false);\n    setShowEmailForm(false);\n  };\n  const handleShowValidacionForm = () => {\n    setShowValidacionForm(true);\n    setShowValidacionEmailForm(false);\n    setShowContraseñaForm(false);\n    setShowNombresForm(false);\n    setShowTelefonoForm(false);\n    setShowEmailForm(false);\n  };\n  const handleShowContraseñaForm = () => {\n    setShowContraseñaForm(true);\n    setShowValidacionEmailForm(false);\n    setShowValidacionForm(false);\n    setShowTelefonoForm(false);\n    setShowEmailForm(false);\n    setShowNombresForm(false);\n    if (editMode) {\n      console.log(formData);\n    }\n  };\n  const handleShowTelefonoForm = () => {\n    setShowTelefonoForm(true);\n    setShowValidacionEmailForm(false);\n    setShowValidacionForm(false);\n    setShowEmailForm(false);\n    setShowNombresForm(false);\n    setShowContraseñaForm(false);\n  };\n  const handleShowNombresForm = () => {\n    setShowNombresForm(true);\n    setShowValidacionEmailForm(false);\n    setShowValidacionForm(false);\n    setShowEmailForm(false);\n    setShowTelefonoForm(false);\n    setShowContraseñaForm(false);\n  };\n  const handleShowEmailForm = () => {\n    setShowEmailForm(true);\n    setShowValidacionEmailForm(false);\n    setShowValidacionForm(false);\n    setShowNombresForm(false);\n    setShowTelefonoForm(false);\n    setShowContraseñaForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contenedor-formcuenta\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: [/*#__PURE__*/_jsxDEV(FormEmail, {\n          showEmailForm: showEmailForm,\n          handleSubmitEmail: handleSubmitEmail,\n          formData: formData,\n          handleInputChange: handleInputChange,\n          emailError: emailError,\n          Form: Form,\n          handleCheckChange: handleCheckChange,\n          editMode: editMode,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormTelefono, {\n          showTelefonoForm: showTelefonoForm,\n          handleSubmitTelefono: handleSubmitTelefono,\n          formData: formData,\n          handleInputChange: handleInputChange,\n          telefonoError: telefonoError,\n          CustomForm: Form,\n          handleCheckboxChange: handleCheckboxChange,\n          editMode: editMode,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormContraseña, {\n          showContraseñaForm: showContraseñaForm,\n          Form: Form,\n          handleSubmitContraseña: handleSubmitContraseña,\n          formData: formData,\n          handleInputChange: handleInputChange,\n          contraseñaError: contraseñaError,\n          editMode: editMode,\n          onClose: onClose,\n          handleSubmitEdit: handleSubmitEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormNombres, {\n          showNombresForm: showNombresForm,\n          handleSubmitNombres: handleSubmitNombres,\n          formData: formData,\n          handleInputChange: handleInputChange,\n          cedulaError: cedulaError,\n          usuarioError: usuarioError,\n          editMode: editMode,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormTelefonoVal, {\n          showValidacionForm: showValidacionForm,\n          handleSubmitCodigoVerificacion: handleSubmitCodigoVerificacion,\n          telefonoError: telefonoError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormEmailVal, {\n          showValidacionEmailForm: showValidacionEmailForm,\n          handleEmailCodigoValidacion: handleEmailCodigoValidacion,\n          emailError: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 11\n        }, this), !showEmailForm && !showNombresForm && !showTelefonoForm && !showContraseñaForm && !showValidacionEmailForm && !showValidacionForm &&\n        /*#__PURE__*/\n        // Mostrar los botones normales\n        _jsxDEV(\"ul\", {\n          className: \"list-unstyled\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h4 text-center mb-4\",\n            children: editMode ? \"Presiona en modificar sobre el dato que desea actualizar, al final para guardar tus datos agrega tu contraseña actual o modificala\" : \"Completa los datos para crear tu cuenta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 15\n          }, this), editMode && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-end mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-close\",\n              onClick: handleGoBack\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"d-flex justify-content-between align-items-center mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: editMode ? \"Modificar E-mail\" : \"Agrega tu E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 17\n            }, this), emailValidado ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success botonn\",\n              disabled: true,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-check-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning botonn\",\n              onClick: handleShowEmailForm,\n              children: editMode ? \"Modificar\" : \"Agregar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"d-flex justify-content-between align-items-center mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: editMode ? \"Modificar nombre\" : \"Elige tu nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 17\n            }, this), nombreValidado ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success botonn\",\n              disabled: true,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-check-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning botonn\",\n              onClick: handleShowNombresForm,\n              disabled: !buttonEnabled.nombre,\n              children: editMode ? \"Modificar\" : \"Agregar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"d-flex justify-content-between align-items-center mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: editMode ? \"Modificar telefono\" : \"Validar tu telefóno\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 17\n            }, this), telefonoValidado ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success botonn\",\n              disabled: true,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-check-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning botonn\",\n              onClick: handleShowTelefonoForm,\n              disabled: !buttonEnabled.telefono,\n              children: editMode ? \"Modificar\" : \"Validar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: editMode ? \"Cambiar contraseña\" : \"Crear contraseña\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning botonn\",\n              onClick: handleShowContraseñaForm,\n              disabled: !buttonEnabled.contraseña,\n              children: editMode ? \"Modificar\" : \"Crear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 636,\n    columnNumber: 5\n  }, this);\n}\n_s(Formcuenta, \"ZnM8KpB3xMuGSKz53+NPQCjS6kk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Formcuenta;\nexport default Formcuenta;\nvar _c;\n$RefreshReg$(_c, \"Formcuenta\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Form","FormEmail","FormTelefono","FormContraseña","FormNombres","FormTelefonoVal","FormEmailVal","jsxDEV","_jsxDEV","Formcuenta","_s","location","editMode","setEditMode","userData","setUserData","navigate","telefonoRegistrado","setTelefonoRegistrado","state","setFormData","prevFormData","email","usuario","correo","nombres","telefono","apellidos","cedula","id_cedula","usuarios","formData","contraseña","confirmPassword","aceptoTerminos","aceptoContacto","handleGoBack","onClose","setShowEmailForm","setShowContraseñaForm","setShowNombresForm","setShowTelefonoForm","handleFormChange","fieldName","value","emailError","setEmailError","cedulaError","setCedulaError","usuarioError","setUsuarioError","telefonoError","setTelefonoError","contraseñaError","setContraseñaError","emailValidado","setEmailValidado","nombreValidado","setNombreValidado","telefonoValidado","setTelefonoValidado","passwordsMatch","setPasswordsMatch","buttonEnabled","setButtonEnabled","nombre","validateEmail","emailRegex","test","handleSubmitEmail","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","error","success","handleShowValidacionEmailForm","catch","handleEmailCodigoValidacion","codigo_verificacion","target","setShowValidacionEmailForm","prevState","handleSubmitNombres","cedula_error","usuario_error","handleSubmitTelefono","handleShowValidacionForm","handleSubmitCodigoVerificacion","codigoVerificacion","setShowValidacionForm","handleSubmitContraseña","contraseñaRegex","console","log","isFormDataComplete","alert","requiredFields","key","handleSubmitEdit","actualPassword","elements","handleUpdateContraseña","handleInputChange","handleCheckChange","handleCheckboxChange","showEmailForm","showNombresForm","showTelefonoForm","showContraseñaForm","showValidacionForm","showValidacionEmailForm","handleShowContraseñaForm","handleShowTelefonoForm","handleShowNombresForm","handleShowEmailForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","CustomForm","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Magdiel/OneDrive/Documents/Proyectos/React/odbo/src/componentes/formulario-cuenta.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormEmail from \"./register/formEmail\";\r\nimport FormTelefono from \"./register/formTelefono\";\r\nimport FormContraseña from \"./register/formContraseña\";\r\nimport FormNombres from \"./register/formNombres\";\r\nimport FormTelefonoVal from \"./register/formValidacionTelefono\";\r\nimport FormEmailVal from \"./register/formValidacionEmail\";\r\n\r\nfunction Formcuenta() {\r\n  const location = useLocation();\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [userData, setUserData] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [telefonoRegistrado, setTelefonoRegistrado] = useState('');\r\n  // Verificar si se ha pasado el estado editMode como parte de la ubicación\r\n  useEffect(() => {\r\n    if (location.state && location.state.editMode && location.state && location.state.userData) {\r\n      setUserData(location.state.userData);\r\n      setEditMode(true);\r\n    }\r\n  }, [location.state]);\r\n  \r\n  // Verificar si userData está definido antes de asignar sus valores\r\n  useEffect(() => {\r\n    if (userData) {\r\n      setFormData(prevFormData => ({\r\n        ...prevFormData,\r\n        email: userData.usuario.correo || '',\r\n        nombres: userData.usuario.nombres || '',\r\n        telefono: userData.usuario.telefono || '',\r\n        apellidos: userData.usuario.apellidos || '',\r\n        cedula: userData.usuario.id_cedula || '',\r\n        usuario: userData.usuario.usuarios || ''\r\n      }));\r\n      if (editMode) {\r\n        setTelefonoRegistrado(userData.usuario.telefono || \"\");\r\n      }\r\n    }\r\n  }, [userData, editMode]);\r\n  \r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    telefono: '',\r\n    contraseña: '',\r\n    nombres: '',\r\n    apellidos: '',\r\n    cedula: '',\r\n    usuario: '',\r\n    confirmPassword: '',\r\n    aceptoTerminos: false,\r\n    aceptoContacto: false\r\n  });\r\n  \r\n  const handleGoBack = () => {\r\n    navigate(-1);\r\n  }\r\n\r\n  const onClose = () => {\r\n    setShowEmailForm(false);\r\n    setShowContraseñaForm(false);\r\n    setShowEmailForm(false);\r\n    setShowNombresForm(false);\r\n    setShowTelefonoForm(false);\r\n  };\r\n\r\n  const handleFormChange = (fieldName, value) => {\r\n    setFormData(prevFormData => ({\r\n      ...prevFormData,\r\n      [fieldName]: value\r\n    }));\r\n  };\r\n\r\n\r\n  const [emailError, setEmailError] = useState('');\r\n  const [cedulaError, setCedulaError] = useState ('');\r\n  const [usuarioError, setUsuarioError] = useState('');\r\n  const [telefonoError, setTelefonoError] = useState('');\r\n  const [contraseñaError, setContraseñaError] = useState('');\r\n  const [emailValidado, setEmailValidado] = useState(false);\r\n  const [nombreValidado, setNombreValidado] = useState(false);\r\n  const [telefonoValidado, setTelefonoValidado] = useState(false);\r\n  const [passwordsMatch, setPasswordsMatch] = useState(true);\r\n  const [buttonEnabled, setButtonEnabled] = useState({\r\n    nombre: false,\r\n    telefono: false,\r\n    contraseña: false\r\n  });\r\n\r\n  // Si estamos en modo de edición, habilitar todos los botones\r\n  useEffect(() => {\r\n    if (editMode) {\r\n      setButtonEnabled({\r\n        nombre: true,\r\n        telefono: true,\r\n        contraseña: true\r\n      });\r\n    }\r\n  }, [editMode]);\r\n\r\n  \r\n\r\n  // FUNCION PARA VALIDAR EL EMAIL\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleSubmitEmail = (event) => {\r\n    event.preventDefault();\r\n    // Validar que el email sea válido\r\n    if (!validateEmail(formData.email)) {\r\n      setEmailError('El correo electrónico ingresado no es válido');\r\n      return;\r\n    }else {\r\n      setEmailError('');\r\n    }\r\n    // Validar que se hayan aceptado los términos\r\n    if (!formData.aceptoTerminos) {\r\n      setEmailError('Debes aceptar los términos y condiciones');\r\n      return;\r\n    }else {\r\n      setEmailError('');\r\n    }\r\n    \r\n    //Verificar existencia de correo\r\n    fetch('http://localhost:5000/verificar_correo', {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ email: formData.email }),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if (data.error) {\r\n        setEmailError(\"Este correo ya está en uso\");\r\n      } else {\r\n       fetch('http://localhost:5000/enviar_codigo_email',{\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\":\"application/json\"\r\n        },\r\n         body:JSON.stringify({email: formData.email}),\r\n       })\r\n       .then(response => response.json())\r\n       .then(data =>{\r\n        if (data.success) {\r\n          handleShowValidacionEmailForm();\r\n          setEmailError(\"\");\r\n        }else {\r\n          setEmailError(\"Error al enviar el codigo de verificacion. Inténtalo de nuevo mas tarde.\");\r\n        }\r\n       })\r\n       .catch(error => {\r\n        setEmailError(\"Error al enviar el codigo de verificacion:\",error);\r\n       });\r\n      }\r\n    })\r\n    .catch(error => {\r\n      setEmailError('Error al verificar correo:', error);\r\n    });\r\n  }\r\n\r\n  //FUNVION DE VALIDACION DE CODIGO DE SEGURIDAD DEL CORREO\r\n  const  handleEmailCodigoValidacion = (event) => {\r\n    event.preventDefault( );\r\n    const codigo_verificacion = event.target['verification-code'].value;\r\n  \r\n    fetch('http://localhost:5000/verificar_codigo_email', {\r\n      method:'POST',\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        codigo_verificacion: codigo_verificacion,\r\n        email: formData.email\r\n      }),\r\n    })\r\n    .then(response => response.json())\r\n    .then (data => {\r\n      if(data.success){\r\n        setShowValidacionEmailForm(false);\r\n        if (editMode){\r\n          return;\r\n        }\r\n        setEmailValidado(true);\r\n        setButtonEnabled(prevState => ({ ...prevState, nombre: true }));\r\n      }else {\r\n        setEmailError(\"Error al verificar codigo de verificacion\", data.error);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      setEmailError(\"Error al verificar codigo de verificacion\", error);\r\n    });\r\n  };\r\n\r\n  //FIN DE VALIDACION DE EMAIL\r\n  //FUNCION PARA VALIDACION DE NOMBRES Y  APELLIDOS DE USUARIO\r\n  const handleSubmitNombres = (event) => {\r\n    event.preventDefault( );\r\n    \r\n    if (formData.nombres === \"\" || formData.apellidos === \"\" || formData.cedula === \"\" || formData.usuario === \"\") {\r\n      // Mostrar mensaje de error o tomar otra acción según sea necesario\r\n      setUsuarioError(\"Todos los campos son requeridos\");\r\n      return;\r\n    }else {\r\n      setUsuarioError(\"\");\r\n    }\r\n\r\n    // Validar que el número de cédula tenga 10 dígitos numéricos\r\n    if (!/^\\d{10}$/.test(formData.cedula)) {\r\n      // Mostrar mensaje de error o tomar otra acción según sea necesario\r\n      setCedulaError(\"El número de cédula debe tener 10 dígitos\");\r\n      return;\r\n    }else {\r\n      setCedulaError(\"\");\r\n    }\r\n\r\n    //Verificar la existencia del numero de cedula y usuario si no esta en modo de edicion\r\n    if (!editMode){\r\n    fetch('http://localhost:5000/verificar_datos', {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ \r\n        cedula: formData.cedula,\r\n        usuario: formData.usuario\r\n      }),\r\n    })\r\n    .then((response) => response.json())\r\n    .then(data => {\r\n      if (data.cedula_error) {\r\n        setCedulaError(data.cedula_error);\r\n      } else if (data.usuario_error) {\r\n        setUsuarioError(data.usuario_error);\r\n      } else {\r\n        // Si no hay errores, puedes proceder al siguiente paso\r\n        setShowNombresForm(false);\r\n        setNombreValidado(true);\r\n        setButtonEnabled(prevState => ({ ...prevState, telefono: true }));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      setUsuarioError(\"Ocurrió un error al verificar la cedula y el usuario\", error);\r\n    });\r\n  } else {\r\n    setShowNombresForm(false);\r\n  }\r\n}\r\n\r\n  //FIN DE LA VALIDACION DE NOMBRES\r\n  //FUNCION PARA VALIDAR EL NUMERO DE TELEFONO\r\n  const handleSubmitTelefono = (event)=> {\r\n    event.preventDefault();\r\n    // Validar que el número de teléfono tenga exactamente 9 dígitos numéricos\r\n    if (!/^\\d{9}$/.test(formData.telefono)) {\r\n      // Mostrar mensaje de error o tomar otra acción según sea necesario\r\n      setTelefonoError(\"El número de teléfono debe tener 9 dígitos numéricos\");\r\n      return;\r\n    }else {\r\n      setTelefonoError(null);\r\n    }\r\n\r\n    if (!formData.aceptoContacto) {\r\n      // Mostrar mensaje de error o tomar otra acción según sea necesario\r\n      setTelefonoError(\"Debes aceptar que te contacten por WhatsApp y/o SMS\");\r\n      return;\r\n    }else {\r\n      setTelefonoError(null);\r\n    }\r\n\r\n     // Verificar si está en modo de edición y el número de teléfono ingresado es el mismo que el número existente\r\n     if(editMode && formData.telefono === telefonoRegistrado) {\r\n      setTelefonoError(\"El número ingresado es el mismo. Si deseas modificarlo, ingresa un nuevo número\")\r\n      return;\r\n     }\r\n    \r\n     // Verificar existencia de numero de telefono \r\n    fetch('http://localhost:5000/verificar_telefono', {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ telefono: formData.telefono }),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if (data.error) {\r\n        setTelefonoError(\"Este numero de telefono ya esta en uso\");\r\n      } else {\r\n        // Si el número de teléfono no está en uso, enviar el código de verificación desde el servidor\r\n        fetch('http://localhost:5000/enviar_codigo_verificacion', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ telefono: formData.telefono }),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if (data.success) {\r\n            // Si el código se envió correctamente, mostrar el formulario de validación\r\n            handleShowValidacionForm();\r\n            setTelefonoError(\"\"); // Limpiar el error de teléfono si lo hay\r\n          } else {\r\n            setTelefonoError(\"Error al enviar el código de verificación. Inténtalo de nuevo más tarde.\");\r\n          }\r\n        })\r\n        .catch(error => {\r\n          setTelefonoError('Error al enviar el código de verificación:', error);\r\n        });\r\n      }\r\n    })\r\n    .catch(error => {\r\n      setTelefonoError('Error al verificar numero de telefono', error);\r\n    });\r\n  }\r\n\r\n//FUNVION DE VALIDACION DE CODIGO DE SEGURIDAD DEL TELEFONO\r\nconst handleSubmitCodigoVerificacion = (event) => {\r\n  event.preventDefault();\r\n\r\n  const codigoVerificacion = event.target['verification-code'].value;  // Obtener el código de verificación del formulario\r\n\r\n  fetch('http://localhost:5000/verificar_codigo_verificacion', {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ \r\n        codigo_verificacion: codigoVerificacion,\r\n        telefono: formData.telefono\r\n      }),  // Enviar el código de verificación al servidor\r\n  })\r\n  .then(response => response.json())\r\n  .then(data => {\r\n      if (data.success) {\r\n          // Si la verificación es exitosa, actualizar el estado de la aplicación\r\n          setShowValidacionForm(false);\r\n          if(editMode) {\r\n            return;\r\n          }\r\n          setTelefonoValidado(true);\r\n          setButtonEnabled(prevState => ({ ...prevState, contraseña: true }));\r\n      } else {\r\n          // Si la verificación falla, mostrar un mensaje de error\r\n          setTelefonoError('Error al verificar código de verificación:', data.error);\r\n          // Aquí puedes mostrar un mensaje de error al usuario o tomar otra acción según necesites\r\n      }\r\n  })\r\n  .catch(error => {\r\n      setTelefonoError('Error al verificar código de verificación:', error);\r\n      // Aquí puedes manejar errores de red u otros errores de comunicación con el servidor\r\n  });\r\n};\r\n//FIN DE LA VALIDACION DE TELEFONO\r\n//FUNCION PARA VALIDACION DE CONTRASEÑA  \r\n\r\nconst handleSubmitContraseña = (event) => {\r\n  event.preventDefault();\r\n\r\n  const contraseñaRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n  \r\n  if (!contraseñaRegex.test(formData.contraseña)) {\r\n    setContraseñaError('La contraseña debe tener al menos 8 caracteres, incluyendo al menos una letra minúscula, una letra mayúscula y un número');\r\n    return;\r\n  }\r\n\r\n\r\n  // Validar que las contraseñas coincidan\r\n  if (formData.contraseña !== formData.confirmPassword) {\r\n    setContraseñaError('Las contraseñas no coinciden');\r\n    return;\r\n  }else {\r\n    setContraseñaError(\"\");\r\n  }\r\n\r\n  console.log(\"Formulario completo:\", isFormDataComplete()); // Registrar si el formulario está completo\r\n\r\n  console.log(\"Datos a enviar al servidor:\", formData);\r\n  \r\n\r\n  if (isFormDataComplete()) {\r\n  // Enviar datos al servidor\r\n  fetch('http://localhost:5000/insertar', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(formData),\r\n  })\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    console.log('Respuesta del servidor con exito:', data);\r\n    if (data.success) {\r\n      // Mostrar mensaje de éxito\r\n      alert('¡Tus datos han sido guardados exitosamente!');\r\n    } else {\r\n      console.error('Error al guardar los datos:', data.error);\r\n    }\r\n  })\r\n  .catch(error => {\r\n    console.error('Error al enviar datos:', error);\r\n    });\r\n  } else {\r\n    console.log('Formulario incompleto. No se envían datos.');\r\n  }\r\n};\r\n\r\nconst isFormDataComplete = () => {\r\n  // Lista de campos que deben estar completos\r\n  const requiredFields = ['email', 'telefono', 'contraseña', 'nombres', 'apellidos', 'cedula', 'usuario', 'confirmPassword'];\r\n\r\n  // Verificar si todos los campos obligatorios del formData están llenos\r\n  for (const key of requiredFields) {\r\n    if (!formData[key]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst handleSubmitEdit = (event) => {\r\n  event.preventDefault();\r\n\r\n  const actualPassword = event.target.elements['actualPassword'].value;\r\n\r\n  if (!actualPassword) {\r\n    setContraseñaError('Por favor, ingresa tu contraseña actual.');\r\n    return;\r\n  }\r\n\r\n  fetch('http://localhost:5000/verificar_contraseña', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ actualPassword, cedula: formData.cedula }),\r\n  })\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    if (data.success) {\r\n      console.log(\"Contraseña actual correcta\")\r\n      handleUpdateContraseña(actualPassword); // La contraseña actual coincide, continuar con la actualización\r\n    } else {\r\n      setContraseñaError('La contraseña actual es incorrecta');\r\n    }\r\n  })\r\n  .catch(error => {\r\n    console.error('Error al verificar la contraseña:', error);\r\n    setContraseñaError('Ocurrió un error al verificar la contraseña');\r\n  });\r\n};\r\n\r\nconst handleUpdateContraseña = () => {\r\n  // Verificar si el usuario está ingresando una nueva contraseña\r\n  if (formData.contraseña && formData.confirmPassword) {\r\n    console.log(formData.contraseña+\"\"+formData.confirmPassword)\r\n    // Validar que las contraseñas coincidan\r\n    if (formData.contraseña !== formData.confirmPassword) {\r\n      setContraseñaError('Las contraseñas no coinciden');\r\n      return;\r\n    } else {\r\n      setContraseñaError('');\r\n    }\r\n\r\n    // Aquí realizarías la actualización de la contraseña en la base de datos\r\n    fetch('http://localhost:5000/actualizar_datos', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ formData }),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if (data.success) {\r\n        // Mostrar mensaje de éxito\r\n        alert('¡Datos actualizados correntamente!');\r\n        // Aquí podrías hacer algo adicional, como limpiar los campos de contraseña\r\n      } else {\r\n        console.error('Error al actualizar los datos', data.error);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error al enviar datos:', error);\r\n    });\r\n  } else {\r\n    // En este caso, el usuario solo ingresó la contraseña actual\r\n    formData.contraseña = actualPassword;\r\n    formData.confirmPassword = actualPassword;\r\n    console.log(formData)\r\n    \r\n    if (isFormDataComplete()) {\r\n      console.log(isFormDataComplete)\r\n      fetch('http://localhost:5000/actualizar_datos', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ formData }),\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          // Mostrar mensaje de éxito\r\n          alert('¡Datos actualizados exitosamente!');\r\n          // Aquí podrías hacer algo adicional, como limpiar los campos del formulario\r\n        } else {\r\n          console.error('Error al actualizar los datos:', data.error);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error al enviar datos:', error);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n//FIN DE LA VALIDACION DE CONTRASEÑA\r\n\r\nconst handleInputChange = (fieldName, value) => {\r\n    if (fieldName === \"contraseña\") {\r\n      // Si el campo que se está cambiando es la contraseña, también actualiza confirmPassword\r\n      setFormData(prevFormData => ({\r\n        ...prevFormData,\r\n        contraseña: value,\r\n        // Actualizar confirmPassword si las contraseñas coinciden\r\n        confirmPassword: value === prevFormData.confirmPassword ? value : prevFormData.confirmPassword\r\n      }));\r\n      // Verificar si las contraseñas coinciden y actualizar el estado\r\n      setPasswordsMatch(value === formData.confirmPassword);\r\n    } else if (fieldName === \"confirmPassword\") {\r\n      // Si el campo que se está cambiando es la confirmación de la contraseña, actualiza solo ese campo\r\n      setFormData(prevFormData => ({\r\n        ...prevFormData,\r\n        confirmPassword: value\r\n      }));\r\n      // Verificar si las contraseñas coinciden y actualizar el estado\r\n      setPasswordsMatch(formData.contraseña === value);\r\n    } else {\r\n      // Para otros campos, simplemente actualiza el estado del formulario\r\n      setFormData(prevFormData => ({\r\n        ...prevFormData,\r\n        [fieldName]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleCheckChange = () => {\r\n    setFormData(prevFormData => ({\r\n      ...prevFormData,\r\n      aceptoTerminos: !prevFormData.aceptoTerminos\r\n    }));\r\n  };\r\n\r\n  const handleCheckboxChange = () => {\r\n    setFormData(prevFormData =>({\r\n      ...prevFormData,\r\n      aceptoContacto: !prevFormData.aceptoContacto\r\n    }));\r\n  };\r\n\r\n  \r\n  const [showEmailForm, setShowEmailForm] = useState(false);\r\n  const [showNombresForm, setShowNombresForm] = useState(false);\r\n  const [showTelefonoForm, setShowTelefonoForm] = useState(false);\r\n  const [showContraseñaForm, setShowContraseñaForm] = useState(false);\r\n  const [showValidacionForm, setShowValidacionForm] = useState(false);\r\n  const [showValidacionEmailForm, setShowValidacionEmailForm] = useState(false);\r\n\r\n  const handleShowValidacionEmailForm = () => {\r\n    setShowValidacionEmailForm(true);\r\n    setShowValidacionForm(false);\r\n    setShowContraseñaForm(false);\r\n    setShowNombresForm(false);\r\n    setShowTelefonoForm(false);\r\n    setShowEmailForm(false);\r\n  }\r\n\r\n  const handleShowValidacionForm = () =>{\r\n    setShowValidacionForm(true);\r\n    setShowValidacionEmailForm(false);\r\n    setShowContraseñaForm(false);\r\n    setShowNombresForm(false);\r\n    setShowTelefonoForm(false);\r\n    setShowEmailForm(false);\r\n  }\r\n\r\n  const handleShowContraseñaForm = () => {\r\n    setShowContraseñaForm(true);\r\n    setShowValidacionEmailForm(false);\r\n    setShowValidacionForm(false);\r\n    setShowTelefonoForm(false);\r\n    setShowEmailForm(false);\r\n    setShowNombresForm(false);\r\n    if(editMode){\r\n      console.log(formData)\r\n    }\r\n  }\r\n\r\n  const handleShowTelefonoForm = () => {\r\n    setShowTelefonoForm(true);\r\n    setShowValidacionEmailForm(false);\r\n    setShowValidacionForm(false);\r\n    setShowEmailForm(false);\r\n    setShowNombresForm(false);\r\n    setShowContraseñaForm(false);\r\n  };\r\n\r\n  const handleShowNombresForm = () => {\r\n    setShowNombresForm(true);\r\n    setShowValidacionEmailForm(false);\r\n    setShowValidacionForm(false);\r\n    setShowEmailForm(false)\r\n    setShowTelefonoForm(false);\r\n    setShowContraseñaForm(false);\r\n  };\r\n  \r\n  const handleShowEmailForm = () => {\r\n    setShowEmailForm(true);\r\n    setShowValidacionEmailForm(false);\r\n    setShowValidacionForm(false);\r\n    setShowNombresForm(false);\r\n    setShowTelefonoForm(false);\r\n    setShowContraseñaForm(false);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"contenedor-formcuenta\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-4\">\r\n          <FormEmail \r\n          showEmailForm={showEmailForm} \r\n          handleSubmitEmail={handleSubmitEmail} \r\n          formData={formData}\r\n          handleInputChange={handleInputChange}\r\n          emailError={emailError}\r\n          Form={Form}\r\n          handleCheckChange={handleCheckChange}\r\n          editMode={editMode}\r\n          onClose={onClose}\r\n          />\r\n          <FormTelefono\r\n          showTelefonoForm= {showTelefonoForm}\r\n          handleSubmitTelefono= {handleSubmitTelefono}\r\n          formData = {formData}\r\n          handleInputChange={handleInputChange}\r\n          telefonoError= {telefonoError}\r\n          CustomForm={Form}\r\n          handleCheckboxChange= {handleCheckboxChange}\r\n          editMode={editMode}\r\n          onClose={onClose}\r\n          />\r\n          <FormContraseña\r\n          showContraseñaForm= {showContraseñaForm}\r\n          Form = {Form}\r\n          handleSubmitContraseña ={handleSubmitContraseña}\r\n          formData = {formData}\r\n          handleInputChange = {handleInputChange}\r\n          contraseñaError = {contraseñaError}\r\n          editMode={editMode}\r\n          onClose={onClose}\r\n          handleSubmitEdit={handleSubmitEdit}\r\n          />\r\n          <FormNombres\r\n          showNombresForm = {showNombresForm}\r\n          handleSubmitNombres = {handleSubmitNombres}\r\n          formData = {formData}\r\n          handleInputChange= {handleInputChange}\r\n          cedulaError = {cedulaError}\r\n          usuarioError = {usuarioError}\r\n          editMode={editMode}\r\n          onClose={onClose}\r\n          />\r\n          <FormTelefonoVal\r\n          showValidacionForm = {showValidacionForm}\r\n          handleSubmitCodigoVerificacion =  {handleSubmitCodigoVerificacion}\r\n          telefonoError = {telefonoError}\r\n          />\r\n          <FormEmailVal\r\n          showValidacionEmailForm =  {showValidacionEmailForm}\r\n          handleEmailCodigoValidacion =  {handleEmailCodigoValidacion}\r\n          emailError =  {emailError}\r\n          />\r\n          { !showEmailForm && !showNombresForm && !showTelefonoForm && !showContraseñaForm && !showValidacionEmailForm && !showValidacionForm &&  (\r\n            // Mostrar los botones normales\r\n            <ul className=\"list-unstyled\">\r\n              <div className=\"h4 text-center mb-4\">\r\n                {editMode ?\"Presiona en modificar sobre el dato que desea actualizar, al final para guardar tus datos agrega tu contraseña actual o modificala\"\r\n                :\"Completa los datos para crear tu cuenta\"}\r\n              </div>\r\n              {editMode && (\r\n                  <div className=\"d-flex justify-content-end mb-3\">\r\n                    <button className=\"btn-close\" onClick={handleGoBack}></button>\r\n                </div>\r\n                )}\r\n              <li className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <label>\r\n                  {editMode? \"Modificar E-mail\" : \"Agrega tu E-mail\"}\r\n                </label>\r\n                {emailValidado ? (\r\n                <button className=\"btn btn-success botonn\" disabled>\r\n                  <i className=\"fa fa-check-circle\"></i>\r\n                </button>\r\n                ) : (\r\n                <button className=\"btn btn-warning botonn\" onClick={handleShowEmailForm}>\r\n                  {editMode? \"Modificar\": \"Agregar\"}\r\n                  </button>\r\n                )}\r\n                \r\n              </li>\r\n              <li className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <label>\r\n                  {editMode? \"Modificar nombre\":\"Elige tu nombre\"}\r\n                  </label>\r\n                {nombreValidado ? (\r\n                <button className=\"btn btn-success botonn\" disabled>\r\n                  <i className=\"fa fa-check-circle\"></i>\r\n                </button>\r\n                ): (\r\n                <button className=\"btn btn-warning botonn\" onClick={handleShowNombresForm} disabled={!buttonEnabled.nombre}>\r\n                  {editMode? \"Modificar\": \"Agregar\"}\r\n                  </button>\r\n                )}\r\n              </li>\r\n              <li className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <label>\r\n                  {editMode? \"Modificar telefono\":\"Validar tu telefóno\"}\r\n                  </label>\r\n                {telefonoValidado ?(\r\n                <button className=\"btn btn-success botonn\" disabled>\r\n                  <i className=\"fa fa-check-circle\"></i>\r\n                </button>\r\n                ):( \r\n                <button className=\"btn btn-warning botonn\" onClick={handleShowTelefonoForm} disabled={!buttonEnabled.telefono}>\r\n                  {editMode? \"Modificar\": \"Validar\"}\r\n                  </button>\r\n                )}\r\n              </li>\r\n              <li className=\"d-flex justify-content-between align-items-center\">\r\n                <label>\r\n                  {editMode? \"Cambiar contraseña\":\"Crear contraseña\"}\r\n                  </label>\r\n                <button className=\"btn btn-warning botonn\" onClick={handleShowContraseñaForm} disabled={!buttonEnabled.contraseña}>\r\n                {editMode? \"Modificar\": \"Crear\"}\r\n                  </button>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Formcuenta;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}